---
name: alexander-hanel/gopep
link: https://github.com/alexander-hanel/gopep
language: Python
topics: []
description: Go Lang Portable Executable Parser
writeup: gopep is Python script for extracting attributes from PE executables compiled in Go.
readme: resources World compiling If line PointeToSybolTable has Binaries thank Hashing
  a reading technique binaries json GO filled difflib clustering information available
  As Windows creates function yeah s symbol Part path low between golang table blocks
  using executables 19 need 64 The relocatable hello Moduledata 6 stack names 15 Output
  thegreenplace name part below tags Hashes In dr Internals caring like compiler tk
  recommendation Analyzing This 0vercl0k 00 I level dissecting used hash_file_paths
  developers likely UPX Machine numbers Hello cmc strtab hooker local at null structure
  Does remember ELF amd64 Reverse Go found named byte Joakim non PTR you GOARCH address
  class cyber posts net fields Example An 14 13 Resources compile windows itabs switch
  Lang similar Bit Say libraries Compiler 09 Code Using file version symtab of in
  8 immunityinc COFF extracting m pdf appears that appended sets Only data book Reconstructing
  10 g following concepts Yet wanting break short Executables Python traversing last
  structures knz python altoros 12 FuncForPC py https tar pnfsoftware http script
  argument adding Import Compiles Every No simple convention tab attributes pclntable
  object IDAPro easier counter mappings statement Not PE Executable nyu how present
  Includes GoPeP now example 386 for arugment calling contains edu 32 library form
  re off commonly Defined program located OOS functions recommend Compile compiles
  ma four right www associated dl Functions parser SequenceMatcher 21 if checks Symbol
  inside blog about contents command engelke by exe org go_logger lekstu go1 filetab
  have 4e5a153ca889 Versions osdev breakpoint then traces arguments stripped io Another
  all src are html itab_sym main String_Table experiment Imphash which libptrace helloworld
  w into tum MD5 Stripped Parser grant getstream files n_name and gz Program python3
  learning github still x86 anyone Kit executed build Has viewed world overview from
  bit 9 there True viewing 08 2 Series full eli is For time Log learn gitbook their
  Clustering These paths Regardless as packers hashing Other reversing_go_binaries_like_a_pro
  stored t rednaga Reversing 2019 hashes first sections not Parsing internals removed
  hash_sys_all Golang be 07 an usr ftab pizza the instance sucks go_base_paths string
  medium project options down packed Overview osiris or on another gopep entries binary
  wiki Ouput detection identified go x00 1 global de functab packeed Note API st would
  section ModuleData 06 pubs source Portable analyzing com ldflags FileHeader Dissecting
  text compiled 0xjiayu Don size seen Command code bytes hashed o holds symbols pro
  NumberOfSymbols based much through check machine 7 How symtab_symbols long executable
  moduledata home Is hash_sys_main start but runtime logger to Via can variables Tool
  repo addresses ga 1709 Coff personal new interesting trivial go_parser hash_itabs
  journey offset comparing Semantics Engineering hash_sys_nomain same 11 test correct
  Attributes 18 deepdive with it Used 2016 False extracted Kennedy links else Notes
  foo
---
